/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormBook.java
 *
 * Created on May 24, 2010, 8:31:19 PM
 */

package PL;

import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.event.*;

import BLL.*;
import EL.*;

/**
 *
 * @author Administrator
 */
public class FormBook extends javax.swing.JFrame implements ListSelectionListener {
    /* fields */
    private BookBLO bookBLO = new BookBLO();

    /** Creates new form FormBook */
    public FormBook() {
        initComponents();
        registerListeners();

        try {
            loadBooksToTable(bookBLO.getAll());
        } catch (Exception ex) { ex.printStackTrace(); }
    }

    private void registerListeners() {
        tblBook.getSelectionModel().addListSelectionListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pCenter = new javax.swing.JPanel();
        pSearch = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        cbSearch = new javax.swing.JComboBox();
        scrollBook = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        pSouth = new javax.swing.JPanel();
        pLeft = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pCen = new javax.swing.JPanel();
        tfBookCode = new javax.swing.JTextField();
        tfBookName = new javax.swing.JTextField();
        tfBookAuthor = new javax.swing.JTextField();
        tfBookPrice = new javax.swing.JTextField();
        pRight = new javax.swing.JPanel();
        btAdd = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FormBook");

        pCenter.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pCenter.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Search");
        pSearch.add(jLabel1);

        tfSearch.setColumns(15);
        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });
        pSearch.add(tfSearch);

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Book Name", "Book Author" }));
        pSearch.add(cbSearch);

        pCenter.add(pSearch, java.awt.BorderLayout.PAGE_START);

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBook.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollBook.setViewportView(tblBook);

        pCenter.add(scrollBook, java.awt.BorderLayout.CENTER);

        getContentPane().add(pCenter, java.awt.BorderLayout.CENTER);

        pSouth.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pSouth.setLayout(new java.awt.BorderLayout());

        pLeft.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));
        pLeft.setLayout(new java.awt.GridLayout(4, 1));

        jLabel2.setText("Book Code");
        pLeft.add(jLabel2);

        jLabel3.setText("Book Name");
        pLeft.add(jLabel3);

        jLabel4.setText("Book Author");
        pLeft.add(jLabel4);

        jLabel5.setText("Book Price");
        pLeft.add(jLabel5);

        pSouth.add(pLeft, java.awt.BorderLayout.LINE_START);

        pCen.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));
        pCen.setLayout(new java.awt.GridLayout(4, 1));

        tfBookCode.setEditable(false);
        pCen.add(tfBookCode);
        pCen.add(tfBookName);
        pCen.add(tfBookAuthor);
        pCen.add(tfBookPrice);

        pSouth.add(pCen, java.awt.BorderLayout.CENTER);

        pRight.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10));
        pRight.setLayout(new java.awt.GridLayout(3, 1));

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });
        pRight.add(btAdd);

        btUpdate.setText("Update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });
        pRight.add(btUpdate);

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });
        pRight.add(btDelete);

        pSouth.add(pRight, java.awt.BorderLayout.LINE_END);

        getContentPane().add(pSouth, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        Book book = new Book(0, tfBookName.getText(), tfBookAuthor.getText(), Integer.parseInt(tfBookPrice.getText()));
        try {
            if (bookBLO.add(book)) loadBooksToTable(bookBLO.getAll());
        } catch (Exception ex) { ex.printStackTrace(); }
    }//GEN-LAST:event_btAddActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        try {
            Book book = bookBLO.getByCode(Integer.parseInt(tfBookCode.getText()));
            if (book != null) {
                book.setName(tfBookName.getText());
                book.setAuthor(tfBookAuthor.getText());
                book.setPrice(Integer.parseInt(tfBookPrice.getText()));
                if (bookBLO.edit(book)) loadBooksToTable(bookBLO.getAll());
            }
        } catch (Exception ex) { ex.printStackTrace(); }
    }//GEN-LAST:event_btUpdateActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        int code = Integer.parseInt(tfBookCode.getText());
        try {
            if (bookBLO.remove(code)) loadBooksToTable(bookBLO.getAll());
        } catch (Exception ex) { ex.printStackTrace(); }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        String keySearch = tfSearch.getText().trim();
        try {
            if (cbSearch.getSelectedItem().equals("Book Name"))
                loadBooksToTable(bookBLO.getByName(keySearch));
            else if (cbSearch.getSelectedItem().equals("Book Author"))
                loadBooksToTable(bookBLO.getByAuthor(keySearch));
        } catch (Exception ex) { ex.printStackTrace(); }
    }//GEN-LAST:event_tfSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btUpdate;
    private javax.swing.JComboBox cbSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel pCen;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pLeft;
    private javax.swing.JPanel pRight;
    private javax.swing.JPanel pSearch;
    private javax.swing.JPanel pSouth;
    private javax.swing.JScrollPane scrollBook;
    private javax.swing.JTable tblBook;
    private javax.swing.JTextField tfBookAuthor;
    private javax.swing.JTextField tfBookCode;
    private javax.swing.JTextField tfBookName;
    private javax.swing.JTextField tfBookPrice;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables

    /* event handle methods */
    public void valueChanged(ListSelectionEvent lse) {
        ListSelectionModel lsm = (ListSelectionModel) lse.getSource();
        if(!lsm.isSelectionEmpty()) {
            int rowSelected = lsm.getMinSelectionIndex();
            int code = Integer.parseInt(tblBook.getModel().getValueAt(rowSelected, 0).toString());
            try {
                loadBookDetails(bookBLO.getByCode(code));
            } catch (Exception ex) { ex.printStackTrace(); }
        }
    }

    /* support methods */
    private void loadBooksToTable(List<Book> books) {
        String[] arrColumns = { "Book Code", "Book Name", "Book Author", "Book Price" };
        DefaultTableModel model = new DefaultTableModel(arrColumns, 0) {
            @Override // disable editable
            public boolean isCellEditable(int row, int column) { return false; }
        };
        for(Book book : books) {
            String[] row = { book.getCode() + "", book.getName(), book.getAuthor(), book.getPrice() + "" };
            model.addRow(row);
        }
        tblBook.setModel(model);
    }

    private void loadBookDetails(Book book) {
        tfBookCode.setText(book.getCode() + "");
        tfBookName.setText(book.getName());
        tfBookAuthor.setText(book.getAuthor());
        tfBookPrice.setText(book.getPrice() + "");
    }
}
